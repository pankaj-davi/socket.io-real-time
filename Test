import redactPII from 'redact-pii';

// Function to validate PII/PCI data and throw an error if any violations are found
export const validatePiiData = (inputText: string): void => {
  // Custom validations
  const customValidations = [
    { regex: /CVV\s*(\d{3})/i, message: 'CVV detected.' },
    { regex: /(?:credit card number|cc number|credit card #)\s*(\d{16}|\d{4}-\d{4}-\d{4}-\d{4})/i, message: 'Credit card number detected.' },
    { regex: /SSO\s*(\d{9})/i, message: 'SSO detected.' },
    { regex: /Patient Id\s*([A-Za-z]{5}\/\d{3}\.\d{2})/i, message: 'Patient ID detected.' },
    { regex: /(Birth date|DOB|Date of Birth)\s*(\d{1,2}[\/-]\d{1,2}[\/-]\d{2,4})/i, message: 'DOB detected.' },
    { regex: /(address|zip code)\s*(\d{5}-\d{4})/i, message: 'Address detected.' },
    { regex: /(Passport Number|Passport #)\s*(\w+)/i, message: 'Passport number detected.' },
  ];

  // First, check against the custom validation rules
  for (const validation of customValidations) {
    if (validation.regex.test(inputText)) {
      throw new Error("Please check your prompt. It may have information that does not comply with Synchrony's policy for sensitive information: " + validation.message);
    }
  }

  // Use redact-pii package for more general PII detection
  const redactedText = redactPII(inputText);

  // If redacted text differs from input, PII was found by the library
  if (redactedText !== inputText) {
    throw new Error('Please check your prompt. It may have information that does not comply with  for sensitive information (detected by redact-pii).');
  }
};

// Example usage:
try {
  validatePiiData("My credit card number is 1234-5678-9876-5432. CVV: 123");
} catch (error) {
  console.error(error.message);
}
